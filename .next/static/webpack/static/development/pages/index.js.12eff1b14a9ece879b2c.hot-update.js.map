{"version":3,"file":"static/webpack/static/development/pages/index.js.12eff1b14a9ece879b2c.hot-update.js","sources":["webpack:///./node_modules/isomorphic-unfetch/browser.js","webpack:///./node_modules/isomorphic-unfetch/node_modules/unfetch/dist/unfetch.mjs","webpack:///./pages/index.js"],"sourcesContent":["module.exports = window.fetch || (window.fetch = require('unfetch').default || require('unfetch'));\n","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest;for(var o in s.open(n.method||\"get\",e,!0),n.headers)s.setRequestHeader(o,n.headers[o]);function u(){var e,n=[],t=[],r={};return s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(s,o,u){n.push(o=o.toLowerCase()),t.push([o,u]),r[o]=(e=r[o])?e+\",\"+u:u}),{ok:2==(s.status/100|0),status:s.status,statusText:s.statusText,url:s.responseURL,clone:u,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},headers:{keys:function(){return n},entries:function(){return t},get:function(e){return r[e.toLowerCase()]},has:function(e){return e.toLowerCase()in r}}}}s.withCredentials=\"include\"==n.credentials,s.onload=function(){t(u())},s.onerror=r,s.send(n.body||null)})};\n//# sourceMappingURL=unfetch.mjs.map\n","import Link from \"next/link\"; // supports client side routing\nimport fetch from \"isomorphic-unfetch\";\nimport Header from \"../components/Header\";\nimport Layout from \"../components/MyLayout\";\n// Link is an HOC that accepts href and similar props\n// child components must accept 'onClick' prop\n\n// dynamic pages using query strings\n// const PostLink = props => (\n//     <li>\n//         <Link href={`/post?title=${props.title}`}>\n//             <a>{props.title}</a>\n//         </Link>\n//     </li>\n// );\n\n// const Index = () => (\n//     <Layout>\n//         <h1>My Blog</h1>\n//         <ul>\n//             <PostLink title=\"Hello Next.js\" />\n//             <PostLink title=\"Learn Next.js\" />\n//             <PostLink title=\"Deploy apps with Zeit\" />\n//         </ul>\n//         <p>Hello Next.js</p>\n//     </Layout>\n// );\n\n// dyanmic pages using route masking - clean urls\nconst PostLink = props => (\n    <li>\n        <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\n            <a>{props.title}</a>\n        </Link>\n    </li>\n);\n\nconst Index = () => (\n    <Layout>\n        <h1>My Blog</h1>\n        <ul>\n            <PostLink id=\"hello-nextjs\" title=\"Hello Next.js\" />\n            <PostLink id=\"learn-nextjs\" title=\"Learn Next.js\" />\n            <PostLink id=\"deploy-nextjs\" title=\"Deploy apps with Zeit\" />\n        </ul>\n        <p>Hello Next.js</p>\n        <h1>Batman TV Shows</h1>\n        <ul>\n            {props.shows.map((show, index) => (\n                <li key={show.id}>\n                    <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n    const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n    const data = await res.json();\n\n    console.log(`data fetched ${data.length}`);\n\n    return {\n        shows: data\n    };\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AACA;AAOA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAXA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAEA;AAJA;AAOA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}