{"version":3,"file":"static/webpack/static/development/pages/index.js.529c338e9e7f1bc80ae1.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from \"next/link\"; // supports client side routing\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/MyLayout\";\n// Link is an HOC that accepts href and similar props\n// child components must accept 'onClick' prop\n\nconst getPosts = () => {\n    return [\n        { id: \"hello-nextjs\", title: \"Hello Next.js\" },\n        { id: \"learn-nextjs\", title: \"Learn Next.js is awesome\" },\n        { id: \"deploy-nextjs\", title: \"Deploy apps with ZEIT\" }\n    ];\n};\n\n// dyanmic pages using route masking - clean urls\nconst PostLink = ({ post }) => (\n    <li>\n        <Link prefetch as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\n            <a>{post.title}</a>\n        </Link>\n        <style jsx>{`\n            a {\n                text-decoration: none;\n            }\n            li {\n                list-style: none;\n                margin: 5px 0;\n            }\n        `}</style>\n    </li>\n);\n\nconst ShowLink = props => (\n    <li>\n        <Link\n            prefetch\n            as={`/s/${props.show.id}`}\n            href={`/show?id=${props.show.id}`}\n        >\n            <a>{props.show.name}</a>\n        </Link>\n        <style jsx>{`\n            a {\n                text-decoration: none;\n            }\n            li {\n                list-style: none;\n                margin: 5px 0;\n            }\n        `}</style>\n    </li>\n);\n\nconst Index = props => (\n    <Layout>\n        <h1>My Blog</h1>\n        <ul>\n            {getPosts().map(post => (\n                <PostLink key={post.id} post={post} />\n            ))}\n        </ul>\n        <h2>Hello Next.js</h2>\n        <h1>Batman TV Shows</h1>\n        <ul>\n            {props.shows.map((item, index) => (\n                <ShowLink show={item.show} />\n            ))}\n        </ul>\n        <style jsx>{`\n            ul {\n                height: 200px;\n                width: 25%;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-around;\n            }\n        `}</style>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n    const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n    const data = await res.json();\n\n    return {\n        shows: data\n    };\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAAA;AAAA;AADA;AACA;AAgBA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AANA;AAAA;AAAA;AADA;AACA;AAoBA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAVA;AAAA;AAAA;AADA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}